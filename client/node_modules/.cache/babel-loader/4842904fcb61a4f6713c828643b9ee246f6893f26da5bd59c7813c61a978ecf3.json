{"ast":null,"code":"var _jsxFileName = \"/Users/shreeyashnaik/Desktop/Zeta/go-socket-pg/client/src/App.js\";\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Home from './components/Home';\nimport NewChat from './components/NewChat';\nimport JoinChat from './components/JoinChat';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 22\n    }, this)\n  }, {\n    path: \"new\",\n    element: /*#__PURE__*/_jsxDEV(NewChat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 22\n    }, this)\n  }\n  // {\n  //     path: \"join\",\n  //     element: <JoinChat />\n  // }\n  ]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Chat App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n\n// function Home() {\n//     const navigate = useNavigate();\n\n//     function handleNewChat() {\n//         console.log(\"New Chat\");\n//         navigate(\"/chats/new\");\n//     }\n\n//     function handleJoinChat() {\n//         console.log(\"Join Chat\");\n//         navigate(\"/chats/join\");\n//     }\n\n//     return (\n//         <>\n//             <h1>Home</h1>\n//             <button className=\"chat\" onClick={handleNewChat}>New Chat</button>\n//             <br /><br />\n//             <button className=\"chat\" onClick={handleJoinChat}>Join Chat</button>\n//         </>\n//     );\n// }\n\n// function NewChat() {\n//     function NewChat() {\n//         const [roomName, setRoomName] = useState('');\n//         const [yourName, setYourName] = useState('');\n\n//         // async function handleSubmit(event) {\n//         //     event.preventDefault();\n//         //     const response = await fetch('/api/addUserToChat', {\n//         //         method: 'POST',\n//         //         headers: {\n//         //             'Content-Type': 'application/json',\n//         //         },\n//         //         body: JSON.stringify({ roomName, yourName }),\n//         //     });\n\n//         //     if (response.ok) {\n//         //         console.log('User added to chat');\n//         //         // Handle successful response\n//         //     } else {\n//         //         console.error('Failed to add user to chat');\n//         //         // Handle error response\n//         //     }\n//         // }\n\n//         return (\n//             <>\n//                 <h1>New Chat</h1>\n\n//                 <form onSubmit={createNewChat}>\n//                     <label>\n//                         Room Name:\n//                         <input\n//                             type=\"text\"\n//                             name=\"roomName\"\n//                             value={roomName}\n//                             onChange={(e) => setRoomName(e.target.value)}\n//                         />\n//                     </label>\n//                     <br /><br />\n//                     <label>\n//                         Your Name:\n//                         <input\n//                             type=\"text\"\n//                             name=\"yourName\"\n//                             value={yourName}\n//                             onChange={(e) => setYourName(e.target.value)}\n//                         />\n//                     </label>\n//                     <br /><br />\n//                     <button type=\"submit\">Create Room</button>\n//                 </form>\n//             </>\n//         );\n//     }\n// }\n\n// function JoinChat() {\n//     return (\n//         <>\n//             <h1>Join Chat</h1>\n\n//             <form>\n//                 <label>\n//                     Enter Chat link:\n//                     <input type=\"text\" name=\"chatLink\" />\n//                 </label>\n//                 <br /><br />\n//                 <label>\n//                     Your Name:\n//                     <input type=\"text\" name=\"yourName\" />\n//                 </label>\n//                 <br /><br />\n//                 <button type=\"submit\">Join Room</button>\n//             </form>\n//         </>\n//     );\n// }\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","Home","NewChat","JoinChat","jsxDEV","_jsxDEV","Fragment","_Fragment","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/shreeyashnaik/Desktop/Zeta/go-socket-pg/client/src/App.js"],"sourcesContent":["import { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Home from './components/Home';\nimport NewChat from './components/NewChat';\nimport JoinChat from './components/JoinChat';\n\nexport default function App() {\n\n    const router = createBrowserRouter([\n        {\n            path: \"/\",\n            element: <Home />\n        },\n        {\n            path: \"new\",\n            element: <NewChat />\n        },\n        // {\n        //     path: \"join\",\n        //     element: <JoinChat />\n        // }\n    ]);\n\n    return (\n        <>\n         <h1>My Chat App</h1>\n         <RouterProvider router={router} />\n        </>\n    );\n}\n\n// function Home() {\n//     const navigate = useNavigate();\n\n//     function handleNewChat() {\n//         console.log(\"New Chat\");\n//         navigate(\"/chats/new\");\n//     }\n\n//     function handleJoinChat() {\n//         console.log(\"Join Chat\");\n//         navigate(\"/chats/join\");\n//     }\n\n//     return (\n//         <>\n//             <h1>Home</h1>\n//             <button className=\"chat\" onClick={handleNewChat}>New Chat</button>\n//             <br /><br />\n//             <button className=\"chat\" onClick={handleJoinChat}>Join Chat</button>\n//         </>\n//     );\n// }\n\n// function NewChat() {\n//     function NewChat() {\n//         const [roomName, setRoomName] = useState('');\n//         const [yourName, setYourName] = useState('');\n\n//         // async function handleSubmit(event) {\n//         //     event.preventDefault();\n//         //     const response = await fetch('/api/addUserToChat', {\n//         //         method: 'POST',\n//         //         headers: {\n//         //             'Content-Type': 'application/json',\n//         //         },\n//         //         body: JSON.stringify({ roomName, yourName }),\n//         //     });\n\n//         //     if (response.ok) {\n//         //         console.log('User added to chat');\n//         //         // Handle successful response\n//         //     } else {\n//         //         console.error('Failed to add user to chat');\n//         //         // Handle error response\n//         //     }\n//         // }\n\n//         return (\n//             <>\n//                 <h1>New Chat</h1>\n\n//                 <form onSubmit={createNewChat}>\n//                     <label>\n//                         Room Name:\n//                         <input\n//                             type=\"text\"\n//                             name=\"roomName\"\n//                             value={roomName}\n//                             onChange={(e) => setRoomName(e.target.value)}\n//                         />\n//                     </label>\n//                     <br /><br />\n//                     <label>\n//                         Your Name:\n//                         <input\n//                             type=\"text\"\n//                             name=\"yourName\"\n//                             value={yourName}\n//                             onChange={(e) => setYourName(e.target.value)}\n//                         />\n//                     </label>\n//                     <br /><br />\n//                     <button type=\"submit\">Create Room</button>\n//                 </form>\n//             </>\n//         );\n//     }\n// }\n\n// function JoinChat() {\n//     return (\n//         <>\n//             <h1>Join Chat</h1>\n\n//             <form>\n//                 <label>\n//                     Enter Chat link:\n//                     <input type=\"text\" name=\"chatLink\" />\n//                 </label>\n//                 <br /><br />\n//                 <label>\n//                     Your Name:\n//                     <input type=\"text\" name=\"yourName\" />\n//                 </label>\n//                 <br /><br />\n//                 <button type=\"submit\">Join Room</button>\n//             </form>\n//         </>\n//     );\n// }"],"mappings":";AAAA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE1B,MAAMC,MAAM,GAAGV,mBAAmB,CAAC,CAC/B;IACIW,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEN,OAAA,CAACJ,IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACpB,CAAC,EACD;IACIL,IAAI,EAAE,KAAK;IACXC,OAAO,eAAEN,OAAA,CAACH,OAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACvB;EACA;EACA;EACA;EACA;EAAA,CACH,CAAC;EAEF,oBACIV,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACCX,OAAA;MAAAW,QAAA,EAAI;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBV,OAAA,CAACL,cAAc;MAACS,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACjC,CAAC;AAEX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAE,EAAA,GA5HwBT,GAAG;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}